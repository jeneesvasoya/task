@model Task.Models.Employee

<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Employee</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @databvalidator = "required,email" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone_No, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone_No, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone_No, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.state_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.state_id, ViewBag.state as List<SelectListItem>, "--Select State--", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.state_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.city_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select id="city_id" name="city_id" class="form-control" required>
                    <option>---Select City---</option>
                </select>
                @Html.ValidationMessageFor(model => model.city_id, "", new { @class = "text-danger" })
            </div>
        </div>
        <div>
            <input type="checkbox" id="chk" name="Agree" value="Agree" onclick="showbtn();" />Are you Agree?
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" id="btn" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>

}


<script>
    $(document).ready(function () {
        document.getElementById("btn").disabled = true;
        $("#state_id").change(function () {
            $.ajax({
                url: "/T/Getcitybystateid",
                type: "GET",
                data: { id: $("#state_id").val() },
                dataType: "json",
                success: function (cities) {
                    $("#city_id").empty();
                    $("#city_id").append(" <option>---Select City---</option>");
                    $.each(cities, function (key, item) {
                        $("#city_id").append("<option value='" + item.city_id + "'>" + item.city_name + "</option>");
                    });
                }
            });
        });
    });

    function showbtn() {
        var chkbx = document.getElementById("chk");
        var btn = document.getElementById("btn");
        if (chkbx.checked == true) {
            document.getElementById("btn").disabled = false;
        }
        else {
            document.getElementById("btn").disabled = true;
        }
    }
</script>
